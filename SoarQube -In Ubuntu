# SoarQube -In Ubuntu.docx

## Your first step here is to install the Java OpenJDK on your Ubuntu system. The SonarQube server required Java OpenJDK v11 to be installed on your Linux machine.
Before start installing packages, run the following apt command to update and refresh your Ubuntu package index repository.

sudo apt update
<img width="473" alt="Screenshot 2023-08-01 230019" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/c72b5909-2be9-4b6a-9399-006807b0ec2c">

## Then, install the Java OpenJDK v11 using the following apt command. The default OpenJDK version on the latest Ubuntu 22.04 is Java OpenJDK v11.
Input Y when prompted to confirm the installation and press ENTER to proceed.

sudo apt install default-jdk
<img width="414" alt="Screenshot 2023-08-01 230509" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/e24fba95-03c5-4dcb-b6d8-44cbd757a5e9">

## Once Java OpenJDK is installed, verify the Java version using the following java command. You will see the output of the Java version that is installed on your system.

java -version
<img width="471" alt="Screenshot 2023-08-01 230901" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/b2aa02c2-43ee-491c-9e86-e4f1a4ac4cad">

## Installing PostgreSQL Database System
SonarQube supports multiple database systems such as PostgreSQL, Microsoft SQL Server, and oracle database. For this example, you will use PostgreSQL as the database for your SonarQube installation.
At the time of this writing, the latest version of SonarQube required at least PostgreSQL v9.6. In this guide, you will install PostgreSQL v13 from the official PostgreSQL repository.
First, add the GPG key of the PostgreSQL repository using the following command.

wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | sudo apt-key add -
<img width="470" alt="Screenshot 2023-08-01 231133" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/ddfc0a2f-b37f-474e-8df5-e072e42c3526">

## Now add the PostgreSQL repository for the Ubuntu system using the below command.

sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'
<img width="471" alt="Screenshot 2023-08-01 231512" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/f96d9ca5-38dd-4545-9c95-467117d067ab">

## Then, update and refresh your ubuntu package index.

sudo apt update
<img width="466" alt="Screenshot 2023-08-01 231756" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/36031458-f4cb-4ee6-8754-5b9c630ee0f6">

## Now, install the PostgreSQL database v13 via the apt command below. Input Y when prompted to confirm the installation, then press ENTER to proceed.

sudo apt install postgresql-13
<img width="469" alt="Screenshot 2023-08-01 232316" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/a27c1714-0ddc-42ac-b559-ccf382a6028b">

## Once PostgreSQL is installed, run the following command to verify the 'postgresql' service and to make sure the service is running.Advertisement

sudo systemctl is-enabled postgresql
<img width="422" alt="Screenshot 2023-08-01 232615" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/206f8026-cf9c-4752-af79-82675ad5eca4">

sudo systemctl status postgresql
<img width="465" alt="Screenshot 2023-08-01 233032" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/3c4cca6f-b033-47a7-929b-a142e0005981">

## With the PostgreSQL installed on your server, you are ready to set up a new database and user for the SonarQube via the PostgreSQL shell.
Run the following command to log in to the PostgreSQL shell.

sudo -u postgres psql
<img width="443" alt="Screenshot 2023-08-01 233532" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/43bd17ea-c3ee-483b-8cd1-06d64de6ea72">

## Now, run the following PostgreSQL queries to create a new database and user for SnonarQube. In this example, you will create the PostgreSQL database and user 'sonarqube'. And be sure to change the password with a strong password.

CREATE USER sonarqube WITH PASSWORD 'Password';
<img width="388" alt="Screenshot 2023-08-01 233859" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/c6d1a938-ff4f-485c-9abe-60d898a18055">

CREATE DATABASE sonarqube OWNER sonarqube;
<img width="351" alt="Screenshot 2023-08-01 234037" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/da8552e8-8fad-4710-9987-636f52a2af5a">

GRANT ALL PRIVILEGES ON DATABASE sonarqube TO sonarqube;
<img width="457" alt="Screenshot 2023-08-01 234202" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/ed6654a7-2816-420c-a672-b32c98c8135c">

## Next, run the following queries to check the list of databases and users on the PostgreSQL server.
\l
<img width="471" alt="Screenshot 2023-08-01 234648" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/f244e516-dad3-48ce-a9a1-a277bb59bff2">

\du
<img width="472" alt="Screenshot 2023-08-01 234916" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/68f4c26f-8b5a-49cd-9500-f3d4d21e12e1">

log out from PostgreSQL using the query below.
\q

## Setting up System
To install SonarQube on a Linux system, you must have a dedicated user that will be running SonarQube and some additional configurations such as ulimit and kernel parameters.
Now you will create a new user for SonarQube, and set up custom kernel parameters via sysctl.conf file, and set up ulimit.
Run the following command to create a new user 'sonarqube' on your system.

sudo useradd -b /opt/sonarqube -s /bin/bash sonarqube
<img width="471" alt="Screenshot 2023-08-02 000437" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/07c430e9-500e-4d0c-8599-13de5cd645e6">

## Next, open the file /etc/sysctl.conf using nano editor.

sudo nano /etc/sysctl.conf
<img width="469" alt="Screenshot 2023-08-02 000818" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/a6bf7ec9-a229-4bdf-9a74-ca82ecbc62e9">

## Add the following configuration to the bottom of the line. The SonarQube required the kernel parameter vm.max_map_count to be greater than '524288' and the fx.file-max to be greater than '131072'.

vm.max_map_count=524288
fs.file-max=131072
<img width="468" alt="Screenshot 2023-08-02 001305" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/b95560cd-71fd-4428-b221-2cd40fce61e5">

Save the file and exit the editor when you are finished.
ctrl + X and y then press enter

## Now run the sysctl command below to apply new changes on the '/etc/sysctl.conf' file.

sudo sysctl --system
<img width="470" alt="Screenshot 2023-08-02 002126" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/7d260f08-0e92-44d9-9546-4c2e1f60cfe7">

## Next run the following command to set up ulimit for the SonarQube. This will take temporary effects on your system, when the system is rebooted, the ulimits will revert to default.
ulimit -n 131072
<img width="294" alt="Screenshot 2023-08-02 002430" src="https://github.com/MagdaleneMensah/DevopsmyAWS/assets/133181270/18ec3e17-ec5d-4843-a087-8ce27f4609ad">
ulimit -u 8192








